# Shared production stack leveraging tenantId scoping inside the application layer.
version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-ap2}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-ap2-pass}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-agentpay}
    volumes:
      - mongodb_data:/data/db
    networks:
      - agentpay
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb://localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis-pass} --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - agentpay
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-redis-pass}", "PING"]
      interval: 30s
      timeout: 5s
      retries: 3

  server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-ap2}:${MONGO_ROOT_PASSWORD:-ap2-pass}@mongodb:27017/${MONGO_DB_NAME:-agentpay}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis-pass}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      COINBASE_API_KEY: ${COINBASE_API_KEY}
      COINBASE_API_SECRET: ${COINBASE_API_SECRET}
      GCP_PROJECT_ID: ${GCP_PROJECT_ID}
      GCP_KMS_KEY_RING: ${GCP_KMS_KEY_RING}
      GCP_KMS_CRYPTO_KEY: ${GCP_KMS_CRYPTO_KEY}
      GCP_KMS_LOCATION: ${GCP_KMS_LOCATION}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - agentpay
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  client:
    build:
      context: .
      dockerfile: docker/Dockerfile.client
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:5000}
        VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:5000}
        VITE_STRIPE_PUBLISHABLE_KEY: ${VITE_STRIPE_PUBLISHABLE_KEY}
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - agentpay
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  mongodb_data:
  redis_data:

networks:
  agentpay:
    driver: bridge
